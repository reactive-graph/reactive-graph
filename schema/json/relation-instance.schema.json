{
  "$defs": {
    "ComponentTypeId": {
      "$ref": "#/$defs/NamespacedType"
    },
    "ComponentTypeIds": {
      "items": {
        "$ref": "#/$defs/ComponentTypeId"
      },
      "type": "array"
    },
    "Extension": {
      "$ref": "#/$defs/NamespacedType",
      "description": "Extension on a type. The extension allows to extend information",
      "properties": {
        "description": {
          "default": "",
          "description": "Textual description of the extension.",
          "type": "string"
        },
        "extension": {
          "description": "The extension as JSON representation."
        }
      },
      "required": [
        "extension"
      ],
      "type": "object"
    },
    "Extensions": {
      "description": "Extensions",
      "items": {
        "$ref": "#/$defs/Extension"
      },
      "type": "array"
    },
    "NamespacedType": {
      "description": "Defines the namespace and the name of a type.",
      "properties": {
        "namespace": {
          "description": "The namespace of the type.",
          "type": "string"
        },
        "type_name": {
          "description": "The name of the type.",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "type_name"
      ],
      "type": "object"
    },
    "PropertyInstances": {
      "description": "Properties",
      "type": "object"
    }
  },
  "$id": "https://schema.reactive-graph.io/schema/json/relation-instance.schema.json",
  "$ref": "#/$defs/NamespacedType",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Relation instances are edges from an outbound entity instance to an\n inbound entity instance.\n\n The relation instance is of a relation type. The relation type defines\n the entity types of the outbound entity instance and the inbound entity\n instance. Furthermore, the relation type defines which properties\n (name, data type, socket type) a relation instance have to have.\n\n In contrast to the relation type, the relation instance stores values/\n documents in its properties.",
  "properties": {
    "$id": {
      "default": "https://schema.reactive-graph.io/schema/json/relation-instance.schema.json",
      "description": "The schema identifier",
      "type": "string"
    },
    "components": {
      "$ref": "#/$defs/ComponentTypeIds",
      "default": [],
      "description": "The components of the entity instance."
    },
    "description": {
      "default": "",
      "description": "Textual description of the relation instance.",
      "type": "string"
    },
    "extensions": {
      "$ref": "#/$defs/Extensions",
      "default": [],
      "description": "Relation instance specific extensions."
    },
    "inbound_id": {
      "description": "The id of the inbound vertex.",
      "format": "uuid",
      "type": "string"
    },
    "instance_id": {
      "description": "The instance id.",
      "type": "string"
    },
    "name": {
      "default": "",
      "description": "The name of the relation instance.",
      "type": "string"
    },
    "outbound_id": {
      "description": "The id of the outbound vertex.",
      "format": "uuid",
      "type": "string"
    },
    "properties": {
      "$ref": "#/$defs/PropertyInstances",
      "default": {},
      "description": "The properties of then relation instance.\n\n Each property is represented by its name (String) and it's value. The value is\n a representation of a JSON. Therefore, the value can be boolean, number, string,\n array or an object. For more information about the data types please look at\n <https://docs.serde.rs/serde_json/value/enum.Value.html>"
    }
  },
  "required": [
    "outbound_id",
    "instance_id",
    "inbound_id"
  ],
  "title": "RelationInstance",
  "type": "object",
  "unevaluatedProperties": false
}