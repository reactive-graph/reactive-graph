[package]
name = "reactive-graph-type-system-impl"
description = "Reactive Graph - Type System - Implementation"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
readme = "../../../README.md"

[dependencies]
async-trait = { workspace = true }
dashmap = { workspace = true }
json5 = { workspace = true, optional = true }
log = { workspace = true, features = ["std", "serde"] }
serde_json = { workspace = true }
springtime-di = { workspace = true, features = ["threadsafe", "derive"], optional = true }
toml = { workspace = true, optional = true }
uuid = { workspace = true, features = ["serde", "v4"] }

reactive-graph-graph = { version = "0.10.0", path = "../../graph" }
reactive-graph-runtime-model = { version = "0.10.0", path = "../../runtime/model" }
reactive-graph-lifecycle = { version = "0.10.0", path = "../../lifecycle" }
reactive-graph-reactive-model-impl = { version = "0.10.0", path = "../../reactive/model/impl" }
reactive-graph-serde = { version = "0.10.0", path = "../../serde" }
reactive-graph-type-system-api = { version = "0.10.0", path = "../api", features = ["derive"] }

[dev-dependencies]
criterion = { workspace = true, features = ["html_reports"] }
default-test = { workspace = true }
tokio = { workspace = true, features = ["macros", "time", "rt", "rt-multi-thread", "test-util"] }

reactive-graph-di = { version = "0.10.0", path = "../../di" }
reactive-graph-graph = { version = "0.10.0", path = "../../graph", features = ["test"] }
reactive-graph-lifecycle = { version = "0.10.0", path = "../../lifecycle" }
reactive-graph-utils-test = { version = "0.10.0", path = "../../utils/test" }

[features]
default = ["springtime", "json5", "toml"]
springtime = ["springtime-di/threadsafe", "springtime-di/derive"]
json5 = ["dep:json5", "reactive-graph-serde/json5"]
toml = ["dep:toml", "reactive-graph-serde/toml"]
full = ["springtime", "json5", "toml"]

[lib]
crate-type = ["lib"]

[lints]
workspace = true

[[bench]]
name = "component_manager"
harness = false

[[bench]]
name = "entity_type_manager"
harness = false
