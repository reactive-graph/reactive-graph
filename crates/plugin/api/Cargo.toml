[package]
name = "reactive-graph-plugin-api"
description = "Reactive Graph - Core - Plugins"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
readme = "../../../README.md"

[dependencies]
async-trait = { workspace = true }
http = { workspace = true }
json5 = { workspace = true, optional = true }
rust-embed = { workspace = true, features = ["debug-embed", "compression"], optional = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
springtime-di = { workspace = true, features = ["threadsafe", "derive"], optional = true }
tokio-stream = { workspace = true }
toml = { workspace = true, optional = true }
uuid = { workspace = true, features = ["serde", "v4"] }

reactive-graph-behaviour-model-api = { version = "0.10.0", path = "../../behaviour/model/api" }
reactive-graph-config-model = { version = "0.10.0", path = "../../config/model" }
reactive-graph-graph = { version = "0.10.0", path = "../../graph" }
reactive-graph-command-model = { version = "0.10.0", path = "../../command/model" }
reactive-graph-plugin-derive = { version = "0.10.0", path = "../derive", optional = true }
reactive-graph-reactive-model-impl = { version = "0.10.0", path = "../../reactive/model/impl" }
reactive-graph-reactive-service-api = { version = "0.10.0", path = "../../reactive/service/api" }
reactive-graph-type-system-api = { version = "0.10.0", path = "../../type-system/api" }

[dev-dependencies]
tokio = { workspace = true, features = ["macros", "time", "rt", "rt-multi-thread", "test-util"] }

[build-dependencies]
rustc_version = "0.4.0"

[features]
default = ["derive", "springtime"]
derive = ["reactive-graph-plugin-derive", "rust-embed"]
springtime = ["springtime-di/threadsafe", "springtime-di/derive"]
json5 = ["dep:json5", "reactive-graph-plugin-derive/json5"]
toml = ["dep:toml", "reactive-graph-plugin-derive/toml"]
full = ["derive", "springtime"] #, "json5", "toml" ]

[lib]
crate-type = ["lib"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
