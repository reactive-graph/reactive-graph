[workspace]

resolver = "3"

members = [
    "crates/di",
    "crates/utils/deployment",
    "crates/utils/test",
    "crates/utils/schema-generator",
    "crates/behaviour/model/api",
    "crates/behaviour/model/impl",
    "crates/behaviour/service/api",
    "crates/behaviour/service/impl",
    "crates/config/api",
    "crates/config/model",
    "crates/config/impl",
    "crates/command/api",
    "crates/command/model",
    "crates/command/impl",
    "crates/dynamic-graph/api",
    "crates/dynamic-graph/impl",
    "crates/dynamic-graph/model",
    "crates/dynamic-graph/test",
    "crates/dynamic-graph/web",
    "crates/graph",
    "crates/graphql/schema",
    "crates/graphql/api",
    "crates/graphql/impl",
    "crates/graphql/test",
    "crates/graphql/web",
    "crates/instance-system/api",
    "crates/instance-system/impl",
    "crates/instance-system/json-schema",
    "crates/instance-system/rest",
    "crates/model/flow",
    "crates/plugin/api",
    "crates/plugin/delegates",
    "crates/plugin/derive",
    "crates/plugin/graphql/api",
    "crates/plugin/graphql/impl",
    "crates/plugin/graphql/schema",
    "crates/plugin/graphql/test",
    "crates/plugin/graphql/web",
    "crates/plugin/model",
    "crates/plugin/service/api",
    "crates/plugin/service/impl",
    "crates/remotes/api",
    "crates/remotes/impl",
    "crates/remotes/model",
    "crates/reactive/derive",
    "crates/reactive/model/api",
    "crates/reactive/model/impl",
    "crates/reactive/service/api",
    "crates/reactive/service/impl",
    "crates/lifecycle",
    "crates/runtime/api",
    "crates/runtime/impl",
    "crates/runtime/graphql/schema",
    "crates/runtime/graphql/api",
    "crates/runtime/graphql/impl",
    "crates/runtime/graphql/test",
    "crates/runtime/graphql/web",
    "crates/runtime/model",
    "crates/runtime/service/api",
    "crates/runtime/service/impl",
    "crates/runtime/service/test",
    "crates/runtime/web/api",
    "crates/runtime/web/impl",
    "crates/client",
    "crates/serde",
    "crates/table-model",
    "crates/type-system/api",
    "crates/type-system/derive",
    "crates/type-system/impl",
    "crates/type-system/json-schema",
    "crates/type-system/rest",
    "crates/reactive-graph",
]

default-members = [
    "crates/di",
    "crates/behaviour/model/api",
    "crates/behaviour/model/impl",
    "crates/behaviour/service/api",
    "crates/behaviour/service/impl",
    "crates/config/api",
    "crates/config/model",
    "crates/config/impl",
    "crates/command/api",
    "crates/command/model",
    "crates/command/impl",
    "crates/dynamic-graph/api",
    "crates/dynamic-graph/impl",
    "crates/dynamic-graph/model",
    "crates/dynamic-graph/test",
    "crates/dynamic-graph/web",
    "crates/graph",
    "crates/graphql/schema",
    "crates/graphql/api",
    "crates/graphql/impl",
    "crates/graphql/test",
    "crates/graphql/web",
    "crates/instance-system/api",
    "crates/instance-system/impl",
    "crates/instance-system/json-schema",
    "crates/instance-system/rest",
    "crates/model/flow",
    "crates/plugin/api",
    "crates/plugin/delegates",
    "crates/plugin/derive",
    "crates/plugin/graphql/api",
    "crates/plugin/graphql/impl",
    "crates/plugin/graphql/schema",
    "crates/plugin/graphql/test",
    "crates/plugin/graphql/web",
    "crates/plugin/model",
    "crates/plugin/service/api",
    "crates/plugin/service/impl",
    "crates/remotes/api",
    "crates/remotes/impl",
    "crates/remotes/model",
    "crates/reactive/derive",
    "crates/reactive/model/api",
    "crates/reactive/model/impl",
    "crates/reactive/service/api",
    "crates/reactive/service/impl",
    "crates/lifecycle",
    "crates/runtime/api",
    "crates/runtime/impl",
    "crates/runtime/graphql/schema",
    "crates/runtime/graphql/api",
    "crates/runtime/graphql/impl",
    "crates/runtime/graphql/test",
    "crates/runtime/graphql/web",
    "crates/runtime/model",
    "crates/runtime/service/api",
    "crates/runtime/service/impl",
    "crates/runtime/service/test",
    "crates/runtime/web/api",
    "crates/runtime/web/impl",
    "crates/client",
    "crates/serde",
    "crates/table-model",
    "crates/type-system/api",
    "crates/type-system/derive",
    "crates/type-system/impl",
    "crates/type-system/json-schema",
    "crates/type-system/rest",
    "crates/reactive-graph",
]

[workspace.package]
version = "0.10.0"
authors = ["Andreas Schaeffer <hanack@nooblounge.net>"]
edition = "2024"
license = "MIT"
readme = "README.md"
repository = "https://github.com/reactive-graph/reactive-graph"
homepage = "https://reactive-graph.io/"
keywords = ["graph", "reactive", "control-flow", "inexor"]
rust-version = "1.87.0"

[workspace.dependencies]
actix = "0.13"
actix-cors = "0.7"
actix-http = { version = "3.11", features = ["rustls-0_23"] }
actix-web = { version = "4.11", features = ["rustls-0_23"] }
actix-web-extras = "0.1"
anyhow = "1.0"
# async-graphql features: uuid, chrono, url, log
async-graphql = { version = "7.0", features = ["uuid", "dynamic-schema"] }
async-graphql-actix-web = { version = "7.0" }
async-trait = "0.1"
#async-std = { version = "1.13", features = ["attributes", "tokio1"] }
aws-lc-rs = { version = "1.13", features = ["prebuilt-nasm"] }
clap = { version = "4.5", features = ["derive", "env"] }
clap_complete = "4.5"
clap_mangen = "0.2"
clap-markdown = "0.1"
chrono = { version = "0.4", features = ["serde"] }
colored = "3.0"
convert_case = "0.8"
const_format = { version = "0.2", features = ["fmt"] }
criterion = { version = "0.5", features = ["html_reports"] }
crossbeam = "0.8"
cynic = { version = "3.11", features = ["http-reqwest"], default-features = false }
cynic-introspection = "3.11"
daemonize-me = "2.0"
darling = "0.20"
dashmap = { version = "6.0", features = ["serde"] }
default-test = "0.1"
futures = "0.3"
futures-timer = "3.0"
futures-util = "0.3"
glob = "0.3.2"
gql_client = { version = "1.0.7", git = "https://github.com/reactive-graph/gql-client-rs.git", features = ["rustls-tls"], default-features = false }
# Note: actix-web 5 will likely upgrade http from 0.2 to >= 1.0 (https://github.com/actix/actix-web/issues/3384)
http = "0.2"
include_dir = "0.7"
itertools = "0.14"
json5 = "0.4"
libloading = "0.8"
log = { version = "0.4", features = ["std", "serde"] }
log4rs = { version = "1.4.0-rc1", features = ["console_appender", "file_appender", "toml_format", "ansi_writer"] }
mime = "0.3"
notify = "8.0"
num_cpus = "1.17"
path-tree = "0.8"
portpicker = "0.1.1"
proc-macro2 = "1.0"
quote = "1.0"
rand = "0.9"
rand_derive3 = { version = "0.2", git = "https://github.com/reactive-graph/rand_derive3.git", branch = "rust-edition-2024" }
random-string = "1.1"
rcgen = { version = "0.13", default-features = false, features = ["aws_lc_rs"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"], default-features = false }
rust-embed = { version = "8.7", features = ["debug-embed", "compression"] }
rustls = { version = "0.23.28", features = ["aws_lc_rs"] }
rustls-cert-gen = { version = "0.1", default-features = false, features = ["aws_lc_rs"] }
rustls-pemfile = "2.2"
rustversion = "1.0"
rustyline = "15.0"
schemars = { version = "1.0.0-alpha.17", features = ["uuid1"], git = "https://github.com/GREsau/schemars.git" }
self_update = { version = "0.42", default-features = false, features = ["archive-tar", "archive-zip", "compression-flate2", "compression-zip-deflate", "rustls"] }
semver = "1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
shellwords = "1.1"
signal-hook = "0.3"
similar = "2.7"
springtime = "1.0"
springtime-di = { version = "1.0", features = ["threadsafe", "derive"] }
stopwatch2 = "2.0"
strum = { version = "0.27", features = ["derive"] }
strum_macros = "0.27"
syn = { version = "2.0", features = ["full"] }
tabled = "0.19"
table_to_html = "0.8"
thiserror = "2.0"
tokio = { version = "1", features = ["time", "rt"] }
tokio-stream = "0.1"
toml = "0.8"
toml_edit = "0.22"
typed-builder = "0.21"
uuid = { version = "1.17", features = ["serde", "v4"] }
vergen-gix = { version = "1.0" }
walkdir = "2.5"
wildmatch = "2.4"
workspace_root = "0.1.2"
xdg = "3.0"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)', 'cfg(fn_traits)', 'cfg(unboxed_closures)'] }

[workspace.lints.clippy]
non_std_lazy_statics = "warn"

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
lto = true
strip = "symbols"

#
