searchState.loadedDescShard("reactive_graph", 0, "Returns the argument unchanged.\nEnter the interactive client mode.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe authentication token.\nThe hostname to connect to.\nThe port to connect to.\nIf true, connects via HTTPS.\nThe endpoint to use.\nThe endpoint to use.\nThe endpoint to use.\nThe endpoint to use.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nManage components.\nManage entity instances.\nManage entity types.\nExecutes a command on the client.\nManage flow instances.\nManage entity types.\nPrints information about the instance.\nManage plugins.\nManage relation instances.\nManage entity types.\nManage remotes.\nShutdown the runtime.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nThe id of the reactive instance.\nCalls <code>U::from(self)</code>.\nThe property to add to the entity instance.\nThe entity instance description.\nReturns the argument unchanged.\nThe entity instance id.\nCalls <code>U::from(self)</code>.\nThe entity instance properties.\nThe entity type.\nCLI argument which identifies an entity instance by its id.\nReturns the argument unchanged.\nThe id of the entity instance.\nCalls <code>U::from(self)</code>.\nIdentifies a component of an entity instance.\nThe component type of the reactive instance.\nReturns the argument unchanged.\nThe id of the reactive instance.\nCalls <code>U::from(self)</code>.\nCLI argument which identifies a property of an entity …\nReturns the argument unchanged.\nThe id of the entity instance.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nCLI argument which identifies a reactive instance by its …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe label of the reactive instance.\nCLI argument for searching entity instances.\nThe components to search for.\nReturns the argument unchanged.\nThe id of the entity instance.\nCalls <code>U::from(self)</code>.\nThe label of the entity instance.\nThe properties to search for.\nThe entity type.\nCLI argument which identifies a reactive instance by its …\nReturns the argument unchanged.\nThe id of the reactive instance.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe new JSON value of the property.\nAdds a component to an entity instance.\nAdds a new property to an entity instance.\nCreates a new entity type.\nPrints a single entity instance.\nPrints a single entity instance.\nPrints the value of a property of an entity instance.\nPrints the JSON Schema of entity instances.\nList all entity instances.\nLists the components of an entity instance.\nLists the properties of an entity instance.\nRemoves a component from an entity instance.\nRemoves a property from an entity instance.\nSets the value of a property of an entity instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity instance description.\nThe entity type name.\nThe entity type namespace.\nReturns the argument unchanged.\nThe entity instance id.\nCalls <code>U::from(self)</code>.\nThe entity instance properties.\nTextual description of the flow instance.\nReturns the argument unchanged.\nThe entity instance id.\nCalls <code>U::from(self)</code>.\nThe name of the flow instance.\nThe entity type.\nReturns the argument unchanged.\nThe id of the flow instance and the wrapper entity …\nCalls <code>U::from(self)</code>.\nThe entity instance properties.\nThe flow type.\nThe entity instance properties.\nCLI argument which identifies a flow instance by its id.\nReturns the argument unchanged.\nThe id of the flow instance.\nCalls <code>U::from(self)</code>.\nCLI argument which identifies a reactive instance by its …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe label of the reactive instance.\nCLI argument for searching entity instances.\nReturns the argument unchanged.\nThe id of the entity instance.\nCalls <code>U::from(self)</code>.\nThe label of the entity instance.\nThe entity type.\nCreates a new flow from the given type.\nPrints a single flow instance.\nPrints a single flow instance.\nPrints the JSON Schema of flow instances.\nList all flow instances.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe JSON value of the property.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nThe id of the relation instance.\nCalls <code>U::from(self)</code>.\nThe property to add to the relation instance.\nThe relation instance description.\nReturns the argument unchanged.\nThe id of the relation instance.\nCalls <code>U::from(self)</code>.\nThe relation instance properties.\nCLI argument which identifies an relation instance by its …\nReturns the argument unchanged.\nThe id of the inbound entity instance.\nThe instance id.\nCalls <code>U::from(self)</code>.\nThe id of the outbound entity instance.\nThe relation type.\nIdentifies a component of a relation instance.\nThe component type of the reactive instance.\nReturns the argument unchanged.\nThe id of the relation instance.\nCalls <code>U::from(self)</code>.\nCLI argument which identifies a property of a relation …\nReturns the argument unchanged.\nThe id of the relation instance.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nCLI argument for searching relation instances.\nThe components to search for.\nReturns the argument unchanged.\nThe id of the inbound entity instance.\nCalls <code>U::from(self)</code>.\nThe id of the outbound entity instance.\nThe properties to search for.\nThe relation type.\nCLI argument for searching relation instances.\nReturns the argument unchanged.\nThe id of the relation instance.\nCalls <code>U::from(self)</code>.\nAdds a component to a relation instance.\nAdds a new property to a relation instance.\nCreates a new relation type.\nPrints a single relation instance.\nPrints the value of a property of a relation instance.\nPrints the JSON Schema of relation instances.\nList all relation instances.\nLists the components of a relation instance.\nLists the properties of a relation instance.\nRemoves a component from a relation instance.\nRemoves a property from a relation instance.\nSets the value of a property of a relation instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe command arguments.\nThe command name.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet instance information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe plugin name.\nThe plugin name.\nThe plugin state.\nThe plugin file stem.\nDepends on.\nDependent plugins.\nPrints a single plugin.\nLists all plugins.\nRestarts a plugin.\nSearch for plugins by name, state or stem.\nStarts a plugin.\nStops a plugin.\nUninstall a plugin.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hostname.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe port.\nThe protocol.\nAdds a remote.\nFetches all remotes from all remotes.\nFetches the remotes from the given remote.\nLists the remotes.\nRemoves a remote.\nRemoves all remotes.\nUpdates a remote.\nUpdates all remotes.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe component type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property.\nThe component type.\nThe component type.\nThe extension type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe component type.\nThe component description.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe component type.\nThe component type in a component container.\nThe component type.\nThe component as option.\nThe component name.\nThe component namespace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe component name.\nThe component name.\nThe component namespace.\nThe component namespace.\nThe description to update.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe component type.\nAdds an extension to a component.\nAdds a property to a component.\nCreates a new component.\nDeletes a component.\nPrints a single component.\nPrints the JSON Schema of components.\nList all components.\nList the extensions of a component.\nList the properties of a component.\nRemoves an extension from a component.\nRemoves a property from a component.\nUpdates the description of a component.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property.\nThe entity type.\nThe entity type description.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity type.\nThe component type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity type.\nThe entity type.\nThe extension type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe entity type.\nThe entity type.\nThe entity type as option.\nThe inbound entity type.\nThe outbound entity type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inbound entity type name.\nThe inbound entity type namespace.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe entity type name.\nThe entity type name.\nThe entity type namespace.\nThe entity type namespace.\nThe outbound entity type name.\nThe outbound entity type namespace.\nThe description to update.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity type.\nAdds a component to an entity type.\nAdds an extension to an entity type.\nAdds a property to an entity type.\nCreates a new entity type.\nDeletes a entity type.\nPrints a single entity type.\nPrints the JSON Schema of entity types.\nList all entity types.\nList the components of an entity type.\nList the extensions of an entity type.\nList the properties of an entity type.\nRemoves a component from an entity type.\nRemoves an extension from an entity type.\nRemoves a property from an entity type.\nUpdates the description of an entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property type.\nThe extension type.\nTextual description of the extension.\nThe extension as JSON representation.\nThe extension name.\nThe extension namespace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe component type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe entity instance to add.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nThe extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nThe variable.\nThe flow type description.\nThe type name of the entity type of the wrapper entity …\nThe namespace of the entity type of the wrapper entity …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nThe description of the wrapper entity instance.\nThe id of the wrapper entity instance.\nThe extension type.\nThe flow type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nThe name of the variable.\nReturns the argument unchanged.\nThe entity instance to remove from the flow type.\nCalls <code>U::from(self)</code>.\nThe flow type.\nThe flow type.\nThe flow type as option.\nThe inbound flow type.\nThe outbound flow type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inbound flow type name.\nThe inbound flow type namespace.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe flow type name.\nThe flow type name.\nThe flow type namespace.\nThe flow type namespace.\nThe outbound flow type name.\nThe outbound flow type namespace.\nThe description to update.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe flow type.\nAdds a new entity instance to a flow type.\nAdds an extension to a flow type.\nAdds a property to a flow type.\nCreates a new flow type.\nDeletes a flow type.\nPrints a single flow type.\nPrints the JSON Schema of flow types.\nList all flow types.\nList the extensions of a flow type.\nList the variables of a flow type.\nRemoves an entity instance to a flow type.\nRemoves an extension from a flow type.\nRemoves a property from a flow type.\nUpdates the description of a flow type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property type.\nThe data type of the property.\nDescription of the property.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf the property is mutable or not.\nThe name of the property.\nThe socket type of the property.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe relation type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property.\nThe relation type.\nThe relation type description.\nReturns the argument unchanged.\nThe inbound entity type.\nCalls <code>U::from(self)</code>.\nThe outbound entity type.\nThe relation type.\nThe component type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe relation type.\nThe extension type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe relation type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe relation type.\nThe relation type.\nThe relation type as option.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe relation type name.\nThe relation type name.\nThe relation type namespace.\nThe relation type namespace.\nThe description to update.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe relation type.\nAdds a component to a relation type.\nAdds an extension to a relation type.\nAdds a property to a relation type.\nCreates a new relation type.\nDeletes a relation type.\nPrints a single relation type.\nPrints the JSON Schema of relation types.\nList all relation types.\nList the components of an relation type.\nList the extensions of an relation type.\nList the properties of an relation type.\nRemoves a component from a relation type.\nRemoves an extension from a relation type.\nRemoves a property from a relation type.\nUpdates the description of a relation type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf true, logging is disabled completely.\nReturns the argument unchanged.\nThe GraphQL config location.\nThe instance config location.\nCalls <code>U::from(self)</code>.\nThe logging config location.\nThe plugins config location.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf true, the runtime does not wait before exiting.\nRuns the server as daemon.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf set will drop privileges to the specified group. Note: …\nSets the name of the daemon.\nThe location of the daemon PID file. By default, no PID …\nStderr will be written into this file.\nStdout will be written into this file.\nIf set will drop privileges to the specified user. Note: …\nThe working directory of the daemon.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the man pages arguments\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shell.\nInstalls the shell completions.\nPrints the shell completions to stdout.\nPrints or installs Shell completions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe default context path which redirects the root context …\nReturns the argument unchanged.\nThe hostname to bind the GraphQL HTTP server.\nCalls <code>U::from(self)</code>.\nThe port to bind the GraphQL HTTP server.\nIf true, HTTPS is enabled.\nTimeout for graceful workers shutdown in seconds. After …\nThe location of the certificate.\nThe location of the private key.\nThe number of workers to start. The default worker count …\nThe description of the instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the instance.\nIf true, all plugins will be disabled.\nIf true, hot deployment will be disabled.\nThe list of plugins to disable.\nThe list of plugins to enable.\nReturns the argument unchanged.\nThe folder which is watched for hot deployment.\nThe folder which plugins are installed permanently.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a builder for building <code>BinaryInfo</code>. On the builder, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrints info about this binary.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the man pages arguments\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstalls the man pages.\nPrints or installs man pages.\nPrints the man pages to stdout.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the markdown help arguments\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrints the markdown help to stdout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe output format.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nManage instances.\nUpdate the Reactive Graph binary.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe numeric group id of the owner group.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe numeric user id of the owner user.\nThe working directory of the instance. Defaults to the …\nCommon name.\nCountry name.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOrganization name.\nConfigures a local instance,\nGenerates certificate of a local instance.\nInitialize the filesystem structure of a new local …\nManage the plugins of a local instance.\nManage the repositories of a local instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfigures the GraphQL server.\nConfigures the instance.\nConfigures the instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the plugin.\nThe name of the plugin.\nInstalls a plugin.\nUninstalls a plugin.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf true, the default repository will be deleted.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe local name of the repository.\nThe local name of the repository.\nThe remote URL of the repository.\nInitializes a new local repository in a local instance.\nRemoves a local repository.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUpdates to the current release.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHides the download progress.\nHides the output.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpdates to the latest release. Currently, the latest …\nUpdates to the nightly release.\nDon’t ask.\nHides the download progress and the output.\nUpdates to a specific version.\nShows information about the selected release.\nLists the releases.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")