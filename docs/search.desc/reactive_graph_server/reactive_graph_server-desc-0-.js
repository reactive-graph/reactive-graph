searchState.loadedDescShard("reactive_graph_server", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf true, logging is disabled completely.\nReturns the argument unchanged.\nThe GraphQL config location.\nThe instance config location.\nCalls <code>U::from(self)</code>.\nThe logging config location.\nThe plugins config location.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf true, the runtime does not wait before exiting.\nRuns the server as daemon.\nPrints the GraphQL schema and exits.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf set will drop privileges to the specified group. Note: …\nSets the name of the daemon.\nThe location of the daemon PID file. By default, no PID …\nStderr will be written into this file.\nStdout will be written into this file.\nIf set will drop privileges to the specified user. Note: …\nThe working directory of the daemon.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrints the GraphQL schema of the dynamic graph.\nPrints the GraphQL schema of the plugin system of the …\nPrints the GraphQL schema of the runtime of the reactive …\nPrints the GraphQL schema of the reactive graph.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the man pages arguments\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe shell.\nInstalls the shell completions.\nPrints the shell completions to stdout.\nPrints or installs Shell completions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe default context path which redirects the root context …\nReturns the argument unchanged.\nThe hostname to bind the GraphQL HTTP server.\nCalls <code>U::from(self)</code>.\nThe port to bind the GraphQL HTTP server.\nIf true, HTTPS is enabled.\nTimeout for graceful workers shutdown in seconds. After …\nThe location of the certificate.\nThe location of the private key.\nThe number of workers to start. The default worker count …\nThe description of the instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe name of the instance.\nIf true, all plugins will be disabled.\nIf true, hot deployment will be disabled.\nThe list of plugins to disable.\nThe list of plugins to enable.\nReturns the argument unchanged.\nThe folder which is watched for hot deployment.\nThe folder which plugins are installed permanently.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a builder for building <code>BinaryInfo</code>. On the builder, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrints info about this binary.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the man pages arguments\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstalls the man pages.\nPrints or installs man pages.\nPrints the man pages to stdout.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles the markdown help arguments\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrints the markdown help to stdout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe output format.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")