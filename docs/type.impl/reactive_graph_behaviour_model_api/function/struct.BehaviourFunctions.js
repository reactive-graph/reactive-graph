(function() {
    var type_impls = Object.fromEntries([["reactive_graph_behaviour_model_impl",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BehaviourFunctions%3CID,+T,+FnType%3E\" class=\"impl\"><a href=\"#impl-BehaviourFunctions%3CID,+T,+FnType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;ID, T, FnType&gt; BehaviourFunctions&lt;ID, T, FnType&gt;<div class=\"where\">where\n    ID: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: ReactiveInstance&lt;ID&gt;,\n    FnType: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    factory_creator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;BehaviourTypeId, _: FnType) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn BehaviourFactory&lt;ID, T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;,\n) -&gt; BehaviourFunctions&lt;ID, T, FnType&gt;</h4></section><section id=\"method.with_namespace\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_namespace</a>&lt;N&gt;(\n    namespace: N,\n    factory_creator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(_: &amp;BehaviourTypeId, _: FnType) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn BehaviourFactory&lt;ID, T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;,\n) -&gt; NamespacedBehaviourFunctions&lt;ID, T, FnType&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,</div></h4></section><section id=\"method.behaviour_from_ty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">behaviour_from_ty</a>&lt;B&gt;(\n    self,\n    ty: B,\n    f: FnType,\n) -&gt; BehaviourFunctions&lt;ID, T, FnType&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;BehaviourTypeId&gt;,</div></h4></section><section id=\"method.behaviour\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">behaviour</a>&lt;N, TN&gt;(\n    self,\n    namespace: N,\n    type_name: TN,\n    f: FnType,\n) -&gt; BehaviourFunctions&lt;ID, T, FnType&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    TN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,</div></h4></section><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(&amp;self) -&gt; BehaviourFunctionsReadOnlyView&lt;ID, T, FnType&gt;</h4></section></div></details>",0,"reactive_graph_behaviour_model_impl::entity::function::EntityBehaviourFunctions","reactive_graph_behaviour_model_impl::relation::function::RelationBehaviourFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNamespacedBehaviourFunctions%3CID,+T,+FnType%3E%3E-for-BehaviourFunctions%3CID,+T,+FnType%3E\" class=\"impl\"><a href=\"#impl-From%3CNamespacedBehaviourFunctions%3CID,+T,+FnType%3E%3E-for-BehaviourFunctions%3CID,+T,+FnType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;ID, T, FnType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NamespacedBehaviourFunctions&lt;ID, T, FnType&gt;&gt; for BehaviourFunctions&lt;ID, T, FnType&gt;<div class=\"where\">where\n    ID: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: ReactiveInstance&lt;ID&gt;,\n    FnType: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    f: NamespacedBehaviourFunctions&lt;ID, T, FnType&gt;,\n) -&gt; BehaviourFunctions&lt;ID, T, FnType&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NamespacedBehaviourFunctions<ID, T, FnType>>","reactive_graph_behaviour_model_impl::entity::function::EntityBehaviourFunctions","reactive_graph_behaviour_model_impl::relation::function::RelationBehaviourFunctions"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6176]}